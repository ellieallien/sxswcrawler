SXSW Crawler 2015
=======================

This is a set of hacked-together scripts for crawling SXSW and getting
music for all the bands. The site format changes every year, different
sites change their APIs and shit breaks. There is no guarantee this
will work. It is, however, a good starting place.

The process (For me, anyway) works like this:

  1. Download all songs.
  2. Feed into iTunes
  3. Rate with iTunes rater (github.com/netik/iTunesRater)
  4. Take that library and convert it into a schedule using jwz's
     scrape-sxsw.pl script
  5. Take that schedule (as an ICS file) and put it into your 
     phone to have during the event. 

Caveats: I am not responsible for what you do with these scripts. Most
of the music is copyrighted and you shouldn't steal it. Please don't
abuse the bandwidth of any of these sites. 

1. Run the crawl to get data.

  cd scripts
  ./1_run_crawl.sh

  This will create data/crawl_log.txt which everything else will key
  off of.

2. Collect metadata

Essentially we're reading their events pages, parsing them, and trying
to get MP3s. There are usually a few different sources of music:

SXSW MP3s
==========

It used to be that they hosted MP3s for all of the bands on the SXSW
sites for review. These days there's maybe 40-60 songs on the SXSW
site, and the rest are on youtube or otherwise. But, we'll download
those directly.

Youtube 
========

We'll use jwz's youtubedown to get these files as mp4s. We'll then
convert them to mp3s later. 

Soundcloud
==========

Soundclound artists do not have songs, they have artist data listed,
but we want to hear them to know if we should bother going to the
show.

We need to find their most popular song and download it.

Dependencies:
  easy_install requests
  easy_install soundcloud

  Valid soundcloud API keys. Get them from Soundcloud and put them in
  a file called soundcloud_api_keys.py. make sure the file looks like
  this:

     client_id='xxxxx'
     client_secret='xxxxx'
Run: 
  ./get_sc_data.py

  That will build the sc metadata catalog. 

From here you can do:

  ./download_sc.sh - download all the soundcloud songs to music/

  ./download_yt.sh - download all the youtube songs to music/

  ./download_sx.sh - download all of the sxsw to music/

After you've imported and listened to all of the songs:

  ./scrape-sxsw.pl - generate an ICS file 

There is a bunch of other junk in here that frankly, I forget what
they do.

dedupe.sh* - apparently this was used to dedupe the crawl. dead?
fixnames.py* - I think I used this to rename the downloaded music. 
map_artists.py* - Maybe I used this to find more artists in the crawl
map_url_to_artist.py* - ??
rename_mp3_files.py* - tries to fixup MP3 
rename_no_spaces.py* - remove spaces from youtube files
rename_sc_tracks.py* - clean up soundcloud filenames

soundcloud-downloader.py* - I didn't write this, download files from
                            soundcloud, possibly broken

stage1.py* - first part of the fetcher



